// Mocks generated by Mockito 5.1.0 from annotations
// in nurbanhoney_flutter/test/features/nurban_honey/data/repositories/board_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nurbanhoney_flutter/core/network/network_status.dart' as _i2;
import 'package:nurbanhoney_flutter/features/nurban_honey/data/datasources/board_remote_data_source.dart'
    as _i4;
import 'package:nurbanhoney_flutter/features/nurban_honey/data/models/board_info_model/board_info_model.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [NetworkStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkStatus extends _i1.Mock implements _i2.NetworkStatus {
  MockNetworkStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}

/// A class which mocks [BoardRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockBoardRemoteDataSource extends _i1.Mock
    implements _i4.BoardRemoteDataSource {
  MockBoardRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i5.BoardInfoModel>> getBoards() => (super.noSuchMethod(
          Invocation.method(#getBoards, []),
          returnValue:
              Future<List<_i5.BoardInfoModel>>.value(<_i5.BoardInfoModel>[]))
      as _i3.Future<List<_i5.BoardInfoModel>>);
}
